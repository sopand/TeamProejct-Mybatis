<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.MemberMapper">

		<resultMap type="com.project.model.Member" id="MemberMap">
		<id property="m_id" column="m_id" /> <!-- Primary Key -->
		<result property="m_email" column="m_email" />
		<result property="m_nickname" column="m_nickname" />
		<result property="m_name" column="m_name" />
		<result property="m_pwd" column="m_pwd" />
		<result property="m_address" column="m_address" />
		<result property="m_tel" column="m_tel" />
		<result property="m_image" column="m_image" />
		<result property="m_type" column="m_type" />
		<result property="m_cash" column="m_cash" />
	</resultMap>

	<insert id="MemberAdd" parameterType="com.project.model.Member">

		INSERT INTO member(
		m_email,m_code,m_pwd,m_name,m_type,m_reg_date)
		VALUES(
		#{m_email},
		#{m_code},
		#{m_pwd},
		#{m_name},
		#{m_type},
		now()
		)

	</insert>
	<insert id="oAuthAdd" parameterType="com.project.model.Member">
		INSERT INTO member(
		m_email,m_pwd,m_name,m_type,m_reg_date
		) VALUES(
		#{m_email},#{m_pwd},#{m_name},#{m_type},now())
	</insert>

	<select id="FindID" resultMap="MemberMap" parameterType="String">
		SELECT * FROM member WHERE m_email=#{m_email}
	</select>

<!-- 아이디 중복 체크?-->
	<select id="emailCheck" parameterType="String" resultType="int">
		SELECT COUNT(m_email) FROM member WHERE m_email= #{m_email}
	</select> 
	
<!-- 닉네임 중복체크 -->	
<select id="nickCheck" parameterType="String" resultType="int">
		SELECT COUNT(m_nickname) FROM member WHERE m_nickname= #{m_nickname}
	</select> 



	
	<update id="editMember" parameterType="com.project.model.Member">
		UPDATE member SET
		m_pwd=#{m_pwd}
		, m_nickname=#{m_nickname}
		, m_name=#{m_name}
		
		, m_address=#{m_address}
		, m_tel=#{m_tel}
		, m_image=#{m_image}
		,
		m_update_date=now()
		WHERE m_email=#{m_email}

	</update>

<!-- 비밀번호 변경인데 html에서 다른 폼에 있는 email을 불러 오는 방법이 바로 떠오르지않아서
이참에 임시비밀번호로 뜨는 걸 한 번 해보기로;; -->
<update id="changePwd" parameterType="String">
		UPDATE member SET m_pwd=#{m_pwd}, m_email=#{m_email} WHERE m_email=#{m_email}

	</update>

	
<update id="delete" parameterType="String">
	UPDATE member SET m_type='ROLE_X' WHERE m_email=#{m_email};
 </update>

	
	<select id="FindPwd" parameterType="String" resultType="String">
		SELECT m_name FROM member  WHERE m_email= #{m_email} AND m_name=#{m_name}
	</select>

	<select id="AllMember" resultType="com.project.model.Member">
		SELECT * FROM Member
	</select>

	<update id="EmailNum" parameterType="String">
		UPDATE Member SET m_code=#{m_code} WHERE m_email=#{m_email}
	</update>
	
	<select id="EmailCode" parameterType="String"
		resultType="String">
		SELECT id FROM member WHERE m_email=#{m_email} AND	m_code=#{m_code}
	</select>

	<select id="getMember" parameterType="String" resultType="com.project.model.Member">
		SELECT
		*
		FROM
		member
		WHERE
		m_email = #{m_email}
	</select>
	
	<select id="FindAddr" parameterType="String" resultType="String">
		select m_address from member where m_email = #{m_email}
	</select>


</mapper>